version: "3"

services:
  samba:
    image: dockurr/samba:4.19.5
    container_name: samba
    restart: always
    environment:
      - TZ=America/Mexico_City
      - USER=${SAMBA_USER}
      - PASS=${SAMBA_PASS}
      - UID=1000    
      - GID=1000    
      - RW=true
    ports:
      - 445:445
    volumes:
      - ${MEDIA_MOUNTING_POINT}:/storage

  transmission:
    image : jaymoulin/transmission:3.00-1.6.1
    container_name: transmission
    command: transmission-daemon -f -g /config
    volumes:
      - ./transmission_config:/config
      - ${MEDIA_MOUNTING_POINT}/torrents:/downloads
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    expose:
      - 9091
    restart: unless-stopped

  jdownloader:
    image: jaymoulin/jdownloader:2.1.0-armhf
    container_name: jdownloader
    restart: always
    user: 1000:100
    volumes:
        - ${MEDIA_MOUNTING_POINT}/jdownloader/cfg:/opt/JDownloader/app/cfg
        - ${MEDIA_MOUNTING_POINT}/jdownloader:/opt/JDownloader/Downloads
        - ${MEDIA_MOUNTING_POINT}/jdownloader/logs:/opt/JDownloader/logs
    environment: 
            MYJD_USER: ${JDOWNLOADER_PASS}
            MYJD_PASSWORD: ${JDOWNLOADER_USER}
            MYJD_DEVICE_NAME: jdownloader_rpi_docker
            XDG_DOWNLOAD_DIR: /opt/JDownloader/Downloads
    ports:
        - 3129:3129

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${MEDIA_MOUNTING_POINT}/portainer_data_redo:/data
    ports:
      - 9000:9000

  plex:
    image: jaymoulin/plex:1.40.2.8395-armhf
    container_name: plex
    #ports:
    #  - 32400:32400
    #  - 33400:33400
    hostname: plex
    network_mode: "host"
    environment:
      - TZ=America/Mexico_City
    volumes:
      - ${MEDIA_MOUNTING_POINT}/plex:/root/Library/Application Support/Plex Media Server
      - ${MEDIA_MOUNTING_POINT}/plex-media:/media
      - ${MEDIA_MOUNTING_POINT}/plex-tmp:/tmp
    restart: always

  flexget:
    image: wiserain/flexget:3.5
    container_name: flexget
    volumes:
      - ./flexget:/config
      - ${MEDIA_MOUNTING_POINT}/torrents/complete:/downloads
      - ${MEDIA_MOUNTING_POINT}/plex-media:/storage
      - ./flexget/custom-cont-init.d:/custom-cont-init.d
    ports:
      - 5050:5050
    environment:
      - TORRENT_PLUGIN=transmission
      - FG_WEBUI_PASSWD=raspberry1981!
    restart: unless-stopped
    links:
      - transmission

  homer:
    image: b4bz/homer
    #To build from source, comment previous line and uncomment below
    #build: .
    container_name: homer
    volumes:
      - ./hommer/assets/:/www/assets
    ports:
      - 80:8080
    environment:
      - UID=1001 
      - GDI=1001  
    labels:
      - traefik.enable=true
      - traefik.docker.network=public
      - traefik.http.routers.homer-secure.entrypoints=https
      - traefik.http.routers.homer-secure.rule=Host(`home.example.org`)
      - traefik.http.routers.homer-secure.tls=true
      - traefik.http.routers.homer-secure.tls.certresolver=certlocal
      - traefik.http.services.homer.loadbalancer.server.port=8080
    restart: unless-stopped

  rpi-monitor:
    image: michaelmiklis/rpi-monitor:latest
    container_name: rpi-monitor
    volumes:
      - /opt/vc:/opt/vc
      - /boot:/boot
      - /sys:/dockerhost/sys:ro
      - /etc:/dockerhost/etc:ro
      - /proc:/dockerhost/proc:ro
      - /usr/lib:/dockerhost/usr/lib:ro
    #devices:
    #  - "/dev/vchiq:/dev/vchiq" 
    restart: unless-stopped
    ports:
      - 8888:8888

  filebrowser:
    image: hurlenko/filebrowser
    container_name: filebrowser
    environment:
      - UID=1000
      - GID=1000
      - TZ=America/Mexico_City
      - FB_BASEURL=/filebrowser
    ports:
      - "8081:8080"
    volumes:
      - ${MEDIA_MOUNTING_POINT}:/data
      - ${MEDIA_MOUNTING_POINT}/fb-config:/config
    restart: unless-stopped
  
  dash:
    image: mauricenino/dashdot:latest
    container_name: dash
    restart: unless-stopped
    privileged: true
    ports:
      - '8083:3001'
    volumes:
      - /:/mnt/host:ro
    environment:
      - DASHDOT_ENABLE_CPU_TEMPS=true
      - DASHDOT_ALWAYS_SHOW_PERCENTAGES=true

  duckdns:
    image: lsioarmhf/duckdns:latest
    container_name: duckdns
    environment:
      - PUID=1000 #optional
      - PGID=1000 #optional
      - TZ=America/Mexico_City
      - SUBDOMAINS=${DUCKDNS_SUBDOMAINS}
      - TOKEN=${DUCKDNS_TOKEN}
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: 
    network_mode: "host"
    #ports:
      #- "53:53/tcp"
      #- "53:53/udp"
      #- "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      #- "81:80/tcp"
    environment:
      TZ: America/Mexico_City
      WEBPASSWORD: ${PI_HOLE_PASS}
      WEB_PORT: 81
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped